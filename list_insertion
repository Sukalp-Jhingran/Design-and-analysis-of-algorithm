struct Node
{
    int data;
    struct Node *next;

};

void printlist(struct Node *n)
{
    while(n!=NULL)
    {
        printf("%d ", n->data);
        n = n->next;
    }
}

void push(struct Node **head_ref, int new_data)
{
    struct Node *new_node = (struct Node*)malloc(sizeof(struct Node));

    new_node->data = new_data;
    new_node->next = (*head_ref);

    (*head_ref) = new_node;
}

void insertafter(struct Node *prev_node, int new_data)
{
    struct Node *new_node = (struct Node*)malloc(sizeof(struct Node));

    new_node->data = new_data;
    new_node->next = prev_node->next;
    prev_node->next = new_node;

    prev_node = new_node;

}

void append(struct Node **head_ref, int new_data)
{
    struct Node *new_node = (struct Node*)malloc(sizeof(struct Node));

    struct Node *last = *head_ref;

    new_node->data = new_data; 
    new_node->next = NULL;

    if(*head_ref==NULL)
    {
        *head_ref = new_node;
    }
    while(last->next!=NULL)
    {
        last = last->next;

    }
    last->next = new_node;
        
}


int main()
{
    struct Node *head = NULL;
    struct Node *first = NULL;
    struct Node *second = NULL;
    struct Node *third = NULL;
    struct Node *fourth = NULL;

    head = (struct Node*)malloc(sizeof(struct Node));
    first = (struct Node*)malloc(sizeof(struct Node));
    second = (struct Node*)malloc(sizeof(struct Node));
    third = (struct Node*)malloc(sizeof(struct Node));
    fourth = (struct Node*)malloc(sizeof(struct Node));

    head->data = 4;
    head->next = first;

    first->data = 5;
    first->next = second;

    second->data = 6;
    second->next = third;

    third->data = 8;
    third->next = fourth;

    fourth->data = 9;
    fourth->next = NULL;
    push(&head, 19);
    insertafter(second, 23);
    append(&fourth, 29);

    printlist(head);

}
