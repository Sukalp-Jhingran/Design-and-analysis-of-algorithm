include<stdio.h>
#include<stdlib.h>
struct Node
{
  int data;
  struct Node *next;
};

void deleteBegin(struct Node **head)
{

  struct Node *tempNode = *head;
  if (*head == NULL)
    {
      printf ("Linked List Empty, nothing to delete");
      return;
    }

  if (tempNode->next == *head)
    {
      *head = NULL;
      return;
    }

  struct Node *curr = *head;
  while (curr->next != *head)
    curr = curr->next;
  curr->next = (*head)->next;
  *head = (*head)->next;
  free (tempNode);
}

void insert (struct Node **head, int data)
{
  struct Node *newNode = (struct Node *) malloc (sizeof (struct Node));
  newNode->data = data;

  if (*head == NULL)
    {
      *head = newNode;
      (*head)->next = *head;
      return;
    }

  struct Node *curr = *head;

  while (curr->next != *head)
    {
      curr = curr->next;
    }

  curr->next = newNode;
  newNode->next = *head;
  *head = newNode;
}


void display (struct Node *head)
{
  if (head == NULL)
    return;

  struct Node *temp = head;
  do
    {
      printf ("%d ", temp->data);
      temp = temp->next;

    }
  while (temp != head);
  printf ("\n");
}

int main ()
{   
  struct Node *head = NULL;

  insert (&head, 10);
  insert (&head, 11);
  insert (&head, 12);
  insert (&head, 13);
  insert (&head, 14);
  insert (&head, 15);
  insert (&head, 16);

  display (head);

  deleteBegin(&head);
  display (head);

  return 0;
}
